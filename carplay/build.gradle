apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':dhroid')
    compile 'com.android.support:cardview-v7:22.2.1'
    compile project(':library')
    compile 'com.android.support:design:22.2.1'
    compile project(':recyclerViewPager')
    compile files('libs/pinyin4j-2.5.0.jar')
    compile project(':blurry')
    compile 'com.android.support:multidex:1.0.0'
}

android {
    signingConfigs {
        config {
            keyAlias 'android'
            keyPassword 'hahzyjk0328'
            storeFile file('E:/android.keystore')
            storePassword 'hahzyjk0328'
        }
    }



    compileSdkVersion 22
    buildToolsVersion '21.1.2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    defaultConfig {
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        multiDexEnabled true
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')
        ''
        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    productFlavors {


        QQ {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "QQ"]
        }

        _360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }

        Baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Baidu"]
        }

        Jifeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Jifeng"]
        }

        Wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Wandoujia"]
        }

        Huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Huawei"]
        }


        Xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Xiaomi"]
        }



        Anzhi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Anzhi"]
        }


        Yingyonghui {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Yingyonghui"]
        }

        Meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Meizu"]
        }

        PP {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "PP"]
        }

        Dianle {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Dianle"]
        }

        Mumayi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Mumayi"]
        }

        Lianxiang {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Lianxiang"]
        }

        Wangyi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Wangyi"]
        }

        Duomeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Duomeng"]
        }

        Oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Oppo"]
        }

        Jinli {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Jinli"]
        }

        Yiyou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Yiyou"]
        }

        Anbei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Anbei"]
        }


        Woshangdian {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Woshangdian"]
        }

        Suning {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Suning"]
        }

        Nduo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Nduo"]
        }

        Souhu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Souhu"]
        }

        Tongbutui {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Tongbutui"]
        }

        Mogu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Mogu"]
        }

        Liqu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Liqu"]
        }

        MaoPaotang {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "MaoPaotang"]
        }

        Sougou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Sougou"]
        }


    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


}
